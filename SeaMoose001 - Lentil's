#pragma config(Motor,  port1,           roller,        tmotorVex393TurboSpeed_HBridge, openLoop)
#pragma config(Motor,  port2,           lDrive,        tmotorVex393TurboSpeed_MC29, openLoop)
#pragma config(Motor,  port3,           flyLeft1,      tmotorVex393TurboSpeed_MC29, openLoop, reversed)
#pragma config(Motor,  port4,           flyLeft2,      tmotorVex393TurboSpeed_MC29, openLoop, reversed)
#pragma config(Motor,  port5,           flyLeft3,      tmotorVex393TurboSpeed_MC29, openLoop)
#pragma config(Motor,  port6,           flyRight1,     tmotorVex393TurboSpeed_MC29, openLoop)
#pragma config(Motor,  port7,           flyRight2,     tmotorVex393TurboSpeed_MC29, openLoop)
#pragma config(Motor,  port8,           flyRight3,     tmotorVex393TurboSpeed_MC29, openLoop, reversed)
#pragma config(Motor,  port9,           rDrive,        tmotorVex393TurboSpeed_MC29, openLoop, reversed)
#pragma config(Motor,  port10,          lift,          tmotorVex393TurboSpeed_HBridge, openLoop)
//*!!Code automatically generated by 'ROBOTC' configuration wizard               !!*//

#define RX vexRT[Ch1]
#define RY vexRT[Ch2]
#define LY vexRT[Ch3]
#define LX vexRT[Ch4]

void setFly(float pwr) {
	motor[flyLeft1] =
		motor[flyLeft2] =
		motor[flyLeft3] =
		motor[flyRight1] =
		motor[flyRight2] =
		motor[flyRight3] =
		pwr;
}

void setFly(int pwr) {
	motor[flyLeft1] =
		motor[flyLeft2] =
		motor[flyLeft3] =
		motor[flyRight1] =
		motor[flyRight2] =
		motor[flyRight3] =
		pwr;
}

int arcL(int x, int y) {
	return y + x;
}

int arcR(int x, int y) {
	return y - x;
}

void setRDrive(int pwr) {
	motor[rDrive] = pwr;
}

void setLDrive(int pwr) {
	motor[lDrive] = pwr;
}

void arcade(int x, int y) {
	setRDrive(arcR(x, y));
	setLDrive(arcL(x, y));
}

task main()
{
	while(true) {
		arcade(RX, LY);
		setFly(127);
	}
}

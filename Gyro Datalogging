#pragma config(Sensor, in1,    gyro1,          sensorGyro)
#pragma config(Sensor, in2,    gyro2,          sensorGyro)
#pragma config(Sensor, dgtl1,  flyEnc,         sensorQuadEncoder)
#pragma config(Sensor, dgtl3,  lDriveEnc,      sensorQuadEncoder)
#pragma config(Sensor, dgtl5,  rDriveEnc,      sensorQuadEncoder)
//*!!Code automatically generated by 'ROBOTC' configuration wizard               !!*//

task main() {
	static float gyro1Last = 0,
		gyro2Last = 0,
		drift1Max = 0,
		drift2Max = 0,
		drift1Min = 0,
		drift2Min = 0,
		drift1Avg = 0,
		drift2Avg = 0,
		sampleNum = 0,
		timeLast = 0;
	static string gyro1AvgStr;
	static float time,
		gyro1,
		gyro2,
		drift1,
		drift2;
	SensorType[in1] = sensorNone;
	SensorType[in2] = sensorNone;
	wait1Msec(1500);
	SensorType[in1] = sensorGyro;
	SensorType[in2] = sensorGyro;
	wait1Msec(500);
	SensorFullCount[gyro1] = 10800;
	SensorFullCount[gyro2] = 21600;
	wait1Msec(5000);
	while(true) {
		sampleNum++;
		time = nSysTime;
		gyro1 = SensorValue[gyro1];
		gyro2 = SensorValue[gyro2];
		drift1 = (gyro1 - gyro1Last) / (time - timeLast);
		drift2 = (gyro2 - gyro2Last) / (time - timeLast);
		if(drift1 > 1000)
			drift1 = 3600 - drift1;
		if(drift2 > 1000)
			drift2 = 3600 - drift2;
		drift1Avg += drift1;
		drift1Avg /= sampleNum;
		drift2Avg += drift2;
		drift2Avg /= sampleNum;
		if(drift1 > drift1Max)
			drift1Max = drift1;
		else if(drift1 < drift1Min)
			drift1Min = drift1;
		if(drift2 > drift2Max)
			drift2Max = drift2;
		else if(drift2 < drift2Min)
			drift2Min = drift2;
		timeLast = time;
		gyro1Last = gyro1;
		gyro2Last = gyro2;
		datalogDataGroupStart();
			datalogAddValue(0, gyro1);
			datalogAddValue(0, drift1);
			datalogAddValue(0, drift1Max);
			datalogAddValue(0, drift1Min);
			datalogAddValue(0, time);
			datalogAddValue(0, sampleNum);
		datalogDataGroupEnd();
		datalogDataGroupStart();
			datalogAddValue(1, gyro2);
			datalogAddValue(1, drift2);
			datalogAddValue(1, drift2Max);
			datalogAddValue(1, drift2Min);
			datalogAddValue(1, time);
			datalogAddValue(1, sampleNum);
		datalogDataGroupEnd();
		wait1Msec(50);
	}
}
